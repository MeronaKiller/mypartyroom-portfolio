<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.admin.AdminMapper">
	<select id="getDae" resultType="com.example.demo.dto.DaeDto">
		SELECT * FROM dae ORDER BY daecode ASC
	</select>
	
	<select id="getSo" resultType="com.example.demo.dto.SoDto">
		SELECT * FROM so WHERE daeid=#{daeid}
		ORDER BY socode ASC
	</select>
	
	<select id="getNumber" resultType="Integer">
		SELECT IFNULL( MAX( RIGHT(rcode,3 )), 0)+1
		FROM room
		WHERE rcode LIKE concat(#{rcode}, '%')
	</select>
	
	<insert id="roomWriteOk" parameterType="com.example.demo.dto.RoomDto">
		INSERT INTO room(price,rcode,name,description,capacity,pic,duration_type,subpic,halin,keyword,pkgname,pkgprice,pkgstart,pkgend,adress,roadadress,mapx,mapy,caution,refundpolicy,officehour,closedday,floor,car,elevator,fstatus,ininfo,play,kitchen,phone,subname,subdesc,writeday)
		VALUES (#{price},#{rcode},#{name},#{description},#{capacity},#{pic},#{duration_type},#{subpic},#{halin},#{keyword},#{pkgname},#{pkgprice},#{pkgstart},#{pkgend},#{adress},#{roadadress},#{mapx},#{mapy},#{caution},#{refundpolicy},#{officehour},#{closedday},#{floor},#{car},#{elevator},#{fstatus},#{ininfo},#{play},#{kitchen},#{phone},#{subname},#{subdesc},now())
	</insert>
	
	<select id="adminLoginOk" resultType="String">
		SELECT admin_name FROM admin
		WHERE admin_userid=#{admin_userid} AND pwd=#{pwd}
	</select>
	
	<select id="getAllMember" resultType="com.example.demo.dto.MemberDto">
		SELECT * FROM member
		ORDER BY memberid DESC
	</select>
	
	<select  id="getCancleRequest" resultType="com.example.demo.dto.ReservationDto">
		SELECT r.*,
		
		rm.pic,
		rm.name,
		
		m.name AS mname,
		m.userid,
		m.email,
		m.phone
		
		FROM reservation r
		INNER JOIN room rm ON r.rcode = rm.rcode
		INNER JOIN member m ON r.userid = m.userid
		WHERE r.status=1
		<if test="userid != null and userid !=''">
			AND r.uesrid = #{userid}
		</if>
		ORDER BY modified_at ASC
	</select>
	
	<update id="updateReservationStatus">
	    UPDATE reservation 
	    SET status = #{status} 
	    WHERE reservationid = #{reservationId}
	</update>
	
	<update id="updateReservationStatus1" parameterType="com.example.demo.dto.ReservationDto"><!-- 취소수락했을때 -->
	  UPDATE reservation
	  SET status = #{status},
	      modified_at1 = NOW()
	  WHERE reservationid = #{reservationid}
	</update>
	
	<update id="deleteUser">
		UPDATE member
		SET status = #{status}
		WHERE memberid = #{memberid}
	</update>
	<update id="reviveUser">
		UPDATE member
		SET status = #{status}
		WHERE memberid = #{memberid}
	</update>
	
	<select id="roomDelete" resultType="com.example.demo.dto.RoomDto">
		Select * FROM room 
	</select>
	
	<update id="roomDeleteOk" parameterType="com.example.demo.dto.RoomDto">
	  UPDATE room
	  SET duration_type = 1
	  WHERE roomid = #{roomid}
	</update>
	<update id="roomReviveOk" parameterType="com.example.demo.dto.RoomDto">
	  UPDATE room
	  SET duration_type = 2
	  WHERE roomid = #{roomid}
	</update>
   	<select id="noticeManage" resultType="com.example.demo.dto.NoticeDto"> <!-- member은 임시임 만약 admin테이블만들면 수정 -->
   		SELECT n.noticeid, n.title, a.admin_name, n.writeday, n.rnum, n.img, n.content
   		FROM notice n
   		INNER JOIN admin a ON n.admin_name = a.admin_name
   		ORDER BY n.noticeid DESC
   		LIMIT #{index}, 20
   	</select>
   	<select id="noticeGetChong" resultType="Integer">
   		SELECT CEIL( count(noticeid)/20 ) FROM notice 
   	</select>
	<select id="getNoticeContentManage" parameterType="int" resultType="com.example.demo.dto.NoticeDto">
	    SELECT n.noticeid, n.title, a.admin_name, n.writeday, n.rnum, n.img, n.content
	    FROM notice n
	    INNER JOIN admin a ON n.admin_name = a.admin_name
	    WHERE n.noticeid = #{noticeid}
	</select>
	<insert id="noticeWriteOk" parameterType="com.example.demo.dto.NoticeDto">
	    INSERT INTO notice(title, content, admin_name, writeday, adminid)
	    VALUES (#{title}, #{content}, '관리자', now(), #{adminid})
	</insert>
</mapper>