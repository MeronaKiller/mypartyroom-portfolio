# ✅ 고성능 데이터베이스 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/mypartyroom?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=true&cachePrepStmts=true&useServerPrepStmts=true&prepStmtCacheSize=500&prepStmtCacheSqlLimit=2048&useLocalSessionState=true&useLocalTransactionState=true&cacheResultSetMetadata=true&cacheServerConfiguration=true&elideSetAutoCommits=true&maintainTimeStats=false
spring.datasource.username=root
spring.datasource.password=1234

# ✅ HikariCP 8코어 최적화 설정
spring.datasource.hikari.connection-timeout=2000
spring.datasource.hikari.idle-timeout=180000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=24
spring.datasource.hikari.minimum-idle=12
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# ✅ Redis 고성능 설정
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=1000ms
spring.data.redis.database=0

# Redis 연결 풀 최적화
spring.data.redis.lettuce.pool.max-active=100
spring.data.redis.lettuce.pool.max-idle=50
spring.data.redis.lettuce.pool.min-idle=25
spring.data.redis.lettuce.pool.max-wait=1000ms

# ✅ 8코어 최적화 비동기 처리
spring.task.execution.pool.core-size=16
spring.task.execution.pool.max-size=24
spring.task.execution.pool.queue-capacity=500
spring.task.execution.pool.keep-alive=30s

# ✅ MyBatis 최적화 (BATCH 모드 비활성화)
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=false
mybatis.configuration.default-statement-timeout=10
mybatis.configuration.jdbc-type-for-null=NULL
mybatis.configuration.call-setters-on-nulls=true

# MyBatis 매퍼 설정
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.demo.dto
mybatis.configuration.map-underscore-to-camel-case=true

# MyBatis SQL 로그 활성화 (디버깅용)
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# ✅ 트랜잭션 최적화
spring.transaction.default-timeout=10
spring.transaction.rollback-on-commit-failure=true

# ✅ 8코어 최적화 Tomcat 설정
server.tomcat.threads.max=100
server.tomcat.threads.min-spare=25
server.tomcat.accept-count=100
server.tomcat.max-connections=4096
server.tomcat.connection-timeout=2000

# ✅ 압축 및 캐시 최적화
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# ✅ 8코어 최적화 스케줄링
spring.task.scheduling.pool.size=8

# ✅ Jackson JSON 최적화
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# ✅ 로그 레벨 최적화
logging.level.root=WARN
logging.level.com.example.demo=INFO
logging.level.com.example.demo.room=DEBUG
logging.level.com.example.demo.room.RoomMapper=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.mybatis=DEBUG
logging.level.com.zaxxer.hikari=WARN

# ✅ 성능 모니터링
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.enable.all=true

# ✅ JVM 메모리 최적화 관련
spring.jpa.open-in-view=false
spring.jpa.show-sql=false

# ✅ 세션 최적화
server.servlet.session.timeout=1800s
server.servlet.session.cookie.max-age=1800

# ✅ 대용량 처리를 위한 멀티파트 설정
spring.servlet.multipart.max-file-size=1GB
spring.servlet.multipart.max-request-size=1GB
spring.servlet.multipart.resolve-lazily=true